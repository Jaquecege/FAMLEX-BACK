# resumen_admin.py
from fastapi import APIRouter, Form, Depends
from fastapi.responses import JSONResponse
from sqlalchemy.orm import Session
from database import get_db
from routers.auth import obtener_usuario_actual
import requests  # üëà Importante
import json

router = APIRouter()

OLLAMA_URL = "http://20.66.107.40:11434"  # üëà IP p√∫blica de la VM

@router.post("/resumen/divorcio_admin")
async def resumen_divorcio_admin(
    promovente: str = Form(...),
    conyuge: str = Form(...),
    direccion: str = Form(...),
    fecha_matrimonio: str = Form(...),
    regimenadm: str = Form(...),
    usuario=Depends(obtener_usuario_actual),
    db: Session = Depends(get_db)
):
    contenido_legal = f"""
        Quienes suscribimos, {promovente} y {conyuge}, por nuestro propio derecho, se√±alando como domicilio el ubicado en {direccion},
        comparecemos respetuosamente para exponer:

        Que por medio del presente escrito, y con fundamento en el art√≠culo 272 del C√≥digo Civil para la Ciudad de M√©xico,
        venimos a solicitar de manera conjunta y de com√∫n acuerdo el divorcio por la v√≠a administrativa.

        1. Con fecha {fecha_matrimonio}, contrajimos matrimonio civil en la Ciudad de M√©xico.
        2. Ambos comparecientes somos mayores de edad.
        3. No procreamos hijos menores ni dependientes econ√≥micos.
        4. La compareciente no est√° embarazada.
        5. Ninguno requiere pensi√≥n alimenticia.
        6. El r√©gimen matrimonial fue: {regimenadm}.
    """

    prompt = f"Resume jur√≠dicamente en un solo p√°rrafo, usando lenguaje t√©cnico, el siguiente escrito legal:\n{contenido_legal}\nResumen:"

    try:
        response = requests.post(
            f"{OLLAMA_URL}/api/generate",
            headers={"Content-Type": "application/json"},
            data=json.dumps({
                "model": "gemma:2b-instruct",
                "prompt": prompt
            }),
            timeout=180
        )
        if response.status_code == 200:
            resumen_generado = response.json()["response"].strip()
        else:
            resumen_generado = f"No se pudo generar el resumen. C√≥digo: {response.status_code}"

    except Exception as e:
        resumen_generado = f"Error al conectarse con el modelo: {str(e)}"

    return JSONResponse({"resumen": resumen_generado})

